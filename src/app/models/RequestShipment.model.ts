import { IBaseModel } from "./abstract/ibaseModel.interface";
import { LadingScheduleHistoryViewModel } from "../view-model/ladingScheduleHistory.viewModel";
import { Customer, User, Hub, Ward, Province } from ".";
import { ShipmentStatus } from "./shipmentStatus.model";

export class RequestShipment implements LadingScheduleHistoryViewModel {
    id: number;
    ladingScheduleCreatedWhen: any;
    shipmentStatusId: number;
    shipmentStatusName: string;
    ladingScheduleHubId: number;
    ladingScheduleHubName: string;
    note: string;
    shipmentId: number;
    shipmentNumber : string;
    pickingAddress: string;
    createdWhen: any;
    fromHubId: number;
    fromCode: string;
    fromHubName: string;
    fromHubAddress: string;
    fromHubRoutingId: number;
    fromHubRoutingName: string;
    fromProvinceId: number;
    fromProvinceName: string;
    fromDistrictId: number;
    fromProvinceProvinceId: number;
    fromDistrictName :number;
    fromWardId: number;
    fromWardName: number;
    toHubId: number;
    toCode: string;
    toHubName: string;
    toHubAddress: string;
    toHubRoutingId: number;
    toHubRoutingName: string;
    toProvinceProvinceId: number;
    toProvinceName: string;
    toDistrictId: number;
    toDistrictName: string;
    toWardId: number;
    toWardName: string;
    receiverName: string;
    receiverPhone: string;
    shippingAddress: string;
    realRecipientName: string;
    paymentTypeId: number;
    paymentTypeName: string;
    startPickTime: any;
    endPickTime: any;
    startReturnTime: any;
    endReturnTime: any;
    startDeliveryTime: any;
    endDeliveryTime: any;
    expectedDeliveryTime: any;
    firstDeliveredTime: any;
    numPick: string;
    numDeliver: string;
    pickUserId: number;
    pickupCode: string;
    pickupFullName: string;
    deliverUserId: number;
    deliverCode: string;
    deliverFullName: string;
    transferFullName: string;
    startTransferTime: any;
    weight: number;
    calWeight: number;
    totalBox: number;
    cusNote: string;
    pickupNote: string;
    deliveryNote: string;
    returnNote: string;
    deliveryCancelNote: string;
    returnUserId: number;
    returnCode: string;
    returnFullName: string;
    totalPrice: number;
    countShipment: number;
    countShipmentAccept: number;
    totalBoxAccept: number;
    weightAccept: number;
    calWeightAccept: number;
    totalShipment: number;
    sender?: Customer;
    senderId: number;
    senderName: string;
    senderPhone: string;
    companyFrom?: string;
    fromHub?: Hub;
    toHub?: Hub;
    toWard?: Ward;
    toProvince?: Province;
    shipmentStatus: ShipmentStatus;
    addressNoteFrom: string;
    pickUser: User;
    totalChildShipment?: number;
    totalChildRequestShipment?: number;
}
