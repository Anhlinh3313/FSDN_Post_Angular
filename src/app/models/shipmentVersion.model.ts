import { IBaseModel } from "./abstract/ibaseModel.interface";
import { Customer } from "./customer.model";
import { Hub } from "./hub.model";
import { Ward } from "./ward.model";
import { ShipmentStatus } from "./shipmentStatus.model";
import { LadingSchesule } from "./ladingSchedule.model";
import { Package, Reason } from "./index";
import { Size } from "./size.model";
import { User } from "./user.model";
import { ServiceDVGT } from "./serviceDVGT.model";
import { Service } from "./service.model";
import { PaymentType } from "./paymentType.model";
import { Structure } from "./structure.model";
import { ReasonService } from "../services/index";
import { Boxes } from "./boxes.model";
import { Shipment } from "./shipment.model";

export class ShipmentVersion implements IBaseModel {
    //shimnentVersion
    id: number;
    shipmentId: number;
    version: string;
    createdWhen: Date;
    createdBy: number;
    createdByUser: any;
    //shipment
    concurrencyStamp: string;
    isEnabled: boolean;
    shipmentNumber: string;
    orderDate: Date;
    pickupAppointmentTime: Date;
    deliveryAppointmentTime: Date;
    sellerId: number;
    sellerName: string;
    sellerPhone: string;
    senderId: number;
    senderName: string;
    senderPhone: string;
    companyFrom: string;
    addressNoteFrom: string;
    pickingAddress: string;
    latFrom: number;
    lngFrom: number;
    fromWardId: number;
    fromDistrictId: number;
    fromProvinceId: number;
    fromHubId: number;
    fromHubRoutingId: number;
    receiverName: string;
    receiverPhone: string;
    companyTo: string;
    addressNoteTo: string;
    shippingAddress: string;
    latTo: number;
    lngTo: number;
    toWardId: number;
    toDistrictId: number;
    toProvinceId: number;
    toHubId: number;
    toHubRoutingId: number;
    serviceId: number;
    paymentTypeId: number;
    thirdPLId: number;
    pickUserId: number;
    deliverUserId: number;
    transferUserId: number;
    transferReturnUserId: number;
    returnUserId: number;
    note: string;
    weight: number;
    length: number;
    height: number;
    width: number;
    calWeight: number;
    shipmentStatusId: number;
    cusNote: string;
    content: string;
    totalBox: number;
    currentEmpId: number;
    requestShipmentId: number;
    packageId: number;
    receiveHubId: number;
    currentHubId: number;
    cod: number;
    insured: number;
    defaultPrice: number;
    remoteAreasPrice: number;
    fuelPrice: number;
    totalDVGT: number;
    otherPrice: number;
    vatPrice: number;
    totalPrice: number;
    structureId: number;
    serviceDVGTIds: number[];
    //
    currentLat: number;
    currentLng: number;
    location: string;

    package: Package;
    requestShipment: Shipment;
    sender: Customer;
    fromHub: Hub;
    fromHubRouting: Hub;
    toHub: Hub;
    toHubRouting: Hub;
    fromWard: Ward;
    toWard: Ward;
    receiveHub: Hub;
    currentHub: Hub;
    currentEmp: User;
    deliverUser: User;
    pickUser: User;
    returnUser: User;
    shipmentStatus: ShipmentStatus;
    paymentType: PaymentType;
    ladingSchedules: LadingSchesule[];
    service: Service;
    size : Size;
    structure: Structure;
    serviceDVGT: Service;
    shipmentServiceDVGTs: Service[];
    //
    dateRangeValue: any = new Object();
    reasonService: ReasonService;
    reason: Reason;
    boxes: Boxes[];
}